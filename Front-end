<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8"> 
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>News</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.4.1.js"></script>
      <script src="https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>
        <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts-gl/dist/echarts-gl.min.js"></script>
        <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts-stat/dist/ecStat.min.js"></script>
        <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts/dist/extension/dataTool.min.js"></script>
        <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts/map/js/china.js"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts/map/js/world.js"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts/dist/extension/bmap.min.js"></script>
   
   
 <style>
      

/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
        .active, .accordion:hover {
            background-color: #ccc;
        }

/* Style the accordion panel. Note: hidden by default */
        .panel {
            padding: 0 18px;
            background-color: white;
            display: none;
            overflow: scroll;
            max-height: 300px;
        }
      #map
        {
            height: 600px; 
            width: 100%;
        } 
     #earth{
         height: 600px;
         width: 100%;
     }
     
        /* Style the buttons that are used to open and close the accordion panel */
        .accordion {
            background-color: #eee;
            color: #444;
            cursor: pointer;
            padding: 18px;
            width: 100%;
            text-align: left;
            border: none;
            outline: none;
            transition: 0.4s;
        }

    </style>
    
</head>
<body style="height:100%;">
   
    <br>
    <div class = "container">
    <h2 id="text-center">Enter Keyword: </h2>
    <form id ="keyword-form">
       <input type="text" id = "keyword-input" class="form-control form-control-lg">
              <br>
        <button type="button" id="button" class="btn btn-primary btn-block">Submit</button>
    </form>
        <br>
       
        <label for="type">Choose Type:</label>
        <select id="type">
  <option value="article">Articles</option>
  <option value="event">Events</option>
  
</select>
        
<label for="language">Choose Language:</label>
<select id="language">
   
  <option value="">All</option>
  <option value="eng">English</option>
  <option value="zho">Chinese</option>
  <option value="fra">Franch</option>
  <option value="deu">German</option>
  <option value="spa">Spanish</option>
  <option value="ara">Arabic</option>

</select>
         <br>
      
    <div id = "map"></div>
     <div id = "earth"></div>    


    
      <br>
   
      <br>
    
    <h2>News Details: </h2>    
    
       
           <p id="demo" style="overflow:auto"></p>
        

    <br>
</div>
  
    
    <script>
        
        function chooseType() {
            var x = document.getElementById("type").value;
           // document.getElementById("demo").innerHTML = "You selected: " + x;
            return x;
            }
        
        
       
        function chooseLanguage() {
            var x = document.getElementById("language").value;
           // document.getElementById("demo").innerHTML = "You selected: " + x;
            return x;
            }

     var map, infoWindow;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 54.387267, lng: -7.823077},
          zoom: 2
        });
        infoWindow = new google.maps.InfoWindow;
      }
    
    var keyword;

    // call API with keywords
    var clickButton = document.getElementById('button');
    clickButton.addEventListener('click',buttonClick);
    
    var lang_gl = "";
    var type_gl = "";
    function buttonClick(){
        keyword = document.getElementById('keyword-input').value;
      var lang = chooseLanguage();
        lang_gl = lang;
      var type = chooseType();
      type_gl = type;
        let keywordData = {
        keyword: keyword,
        language: lang,
        type : type
      }
      $.ajax({    
         crossDomain: true, 
        url: 'http://127.0.0.1:5000/',
        datatype: "json",
        data: keywordData,
        type: 'GET',

        success: function (data) {
          //成功后回调
            console.log(data);
           if(type_gl == "event")
                 getJSON_event(data);
            else
                 getJSON_article(data);
           showEarth();
        },
        error: function (jqXHR,textStatus,errorThrown) {
          //失败后回调
          console.log("You can not send Cross Domain AJAX requests: "+errorThrown);
        },
      })
    }
    
   var earthdata = new Array();
    showEarth();
    function getJSON_event(data){                     //event数据处理
     var obj = $.parseJSON(data);
       console.log(obj.events.results[0].title.eng);
         console.log(obj.events.results);
        let str = "";
        var i = 0;
        if(lang_gl == "fra"){
            for (i=0; i<obj.events.results.length; i++){
             str = str + "Title: " + "\n"
             str = str + obj.events.results[i].title.fra + "\n\n";
             str = str + "Event Date: " + obj.events.results[i].eventDate + "\n";
             str = str + "Summary: "+ "\n"
             str = str + obj.events.results[i].summary.fra + "\n\n";
            
         }
        }
        if(lang_gl == "eng"){
        for (i=0; i<obj.events.results.length; i++){
             str = str + "Title: " + "\n"
             str = str + obj.events.results[i].title.eng + "\n\n";
             str = str + "Event Date: " + obj.events.results[i].eventDate + "\n";
              str = str + "Summary: "+ "\n"
             str = str + obj.events.results[i].summary.eng + "\n\n";
         }}
        if(lang_gl == "zho"){
        for (i=0; i<obj.events.results.length; i++){
             str = str + "Title: " + "\n"
             str = str + obj.events.results[i].title.zho + "\n\n";
             str = str + "Event Date: " + obj.events.results[i].eventDate + "\n";
             str = str + "Summary: "+ "\n"
             str = str + obj.events.results[i].summary.zho + "\n\n";
         }}
        if(lang_gl == "ara"){
        for (i=0; i<obj.events.results.length; i++){
             str = str + "Title: " + "\n"
             str = str + obj.events.results[i].title.ara + "\n\n";
             str = str + "Event Date: " + obj.events.results[i].eventDate + "\n";
             str = str + "Summary: "+ "\n"
             str = str + obj.events.results[i].summary.ara + "\n\n";
         }}
         if(lang_gl == "deu"){
        for (i=0; i<obj.events.results.length; i++){
             str = str + "Title: " + "\n"
             str = str + obj.events.results[i].title.deu + "\n\n";
             str = str + "Event Date: " + obj.events.results[i].eventDate + "\n";
             str = str + "Summary: "+ "\n"
             str = str + obj.events.results[i].summary.deu + "\n\n";
         }}
        if(lang_gl == "spa"){
        for (i=0; i<obj.events.results.length; i++){
             str = str + "Title: " + "\n"
             str = str + obj.events.results[i].title.spa + "\n\n";
             str = str + "Event Date: " + obj.events.results[i].eventDate + "\n";
             str = str + "Summary: "+ "\n"
             str = str + obj.events.results[i].summary.spa + "\n\n";
         }}
       document.getElementById("demo").innerText=str;
       pointMap_event (obj);
      
        
    }
     
    function getJSON_article(data){
         var obj = $.parseJSON(data);
       console.log(obj.articles.results);
      console.log(typeof(obj.articles.results[0].url));
      //  document.write(obj.articles.results[0].uri);
        let str = "";
        var i = 0;
         for (i=0; i<obj.articles.results.length; i++){
             str = str + "Title: " + "\n"
             str = str + obj.articles.results[i].title + "\n\n";
             str = str + "Body: " + "\n";
             str = str + obj.articles.results[i].body + "\n\n";
             str = str + "Post time: " + "\n";
             str = str + obj.articles.results[i].dateTime + "\n\n";
             str = str + "Sentiment: " + "\n";
             str = str + obj.articles.results[i].sentiment + "\n\n\n\n";
             
         }
 
       document.getElementById("demo").innerText=str;
       pointMap_article(obj);
      
    }
    var k = 0;
    
        var icons = {
             positiveP:{
                 icon: "https://img.icons8.com/color/48/000000/marker.png"
             },
             negativeP:{
                 icon: "https://img.icons8.com/material/48/000000/marker--v1.png"
             }
            
         };    
    var url=new Array();
    // pointing emoji in Google map
    function pointMap_event (obj){            //event 地图打点
        initMap(); 
        for (i=0; i < obj.events.results.length; i++) {
          if(obj.events.results[i].location != null){
             var position = new google.maps.LatLng(obj.events.results[i].location.lat, obj.events.results[i].location.long);
             console.log(typeof(obj.events.results[i].location.label.eng));
             if (obj.events.results[i].sentiment > 0)
                var icon=icons['positiveP'].icon;        
             else 
                 var icon=icons['negativeP'].icon;

          var marker = new google.maps.Marker({
            position: position,
            icon: icon,
            map:map,
            title: "click to open: "
          });
            
              if(lang_gl == "fra"){
              url[i] = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<div id="bodyContent">'+
      '<p><b>'+obj.events.results[i].title.fra+'</b></p>'+'\n'+
      obj.events.results[i].location.label.eng+'</a>'+
      '</div>';}
             
              if(lang_gl == "eng"){
              url[i] = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<div id="bodyContent">'+
      '<p><b>'+obj.events.results[i].title.eng+'</b></p>'+'\n'+
      obj.events.results[i].location.label.eng+'</a>'+
      '</div>';}
              
              if(lang_gl == "zho"){
              url[i] = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<div id="bodyContent">'+
      '<p><b>'+obj.events.results[i].title.zho+'</b></p>'+'\n'+
      obj.events.results[i].location.label.eng+'</a>'+
      '</div>';}
        
              if(lang_gl == "spa"){
              url[i] = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<div id="bodyContent">'+
      '<p><b>'+obj.events.results[i].title.spa+'</b></p>'+'\n'+
      obj.events.results[i].location.label.eng+'</a>'+
      '</div>';}
              
              if(lang_gl == "ara"){
              url[i] = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<div id="bodyContent">'+
      '<p><b>'+obj.events.results[i].title.ara+'</b></p>'+'\n'+
      obj.events.results[i].location.label.eng+'</a>'+
      '</div>';}
              
              if(lang_gl == "deu"){
              url[i] = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<div id="bodyContent">'+
      '<p><b>'+obj.events.results[i].title.deu+'</b></p>'+'\n'+
      obj.events.results[i].location.label.eng+'</a>'+
      '</div>';}
          }else
              continue;
             
           attachSecretMessage(marker, url[i]);
        }
   
}
        
    function pointMap_article(obj){
        initMap(); 
        for (i=0; i < obj.articles.results.length; i++) {
          if(obj.articles.results[i].location != null){
             var position = new google.maps.LatLng(obj.articles.results[i].location.lat, obj.articles.results[i].location.long);
        
             if (obj.articles.results[i].sentiment > 0)
                var icon=icons['positiveP'].icon;        
             else 
                 var icon=icons['negativeP'].icon;

          var marker = new google.maps.Marker({
            position: position,
            icon: icon,
            map:map,
            title: "click to open: "+obj.articles.results[i].title + '\n' + "url: " + obj.articles.results[i].url
          });
            url[i] = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<div id="bodyContent">'+
      '<p><b>'+obj.articles.results[i].title+'</b></p>'+'<a href="'+obj.articles.results[i].url+'" target="_blank" rel="noopener noreferrer">'+
      obj.articles.results[i].url+'</a>'+
      '</div>';
        
          }else
              continue;
             
           attachSecretMessage(marker, url[i]);
        }
   
    }
    function attachSecretMessage(marker, secretMessage) {
        var infowindow = new google.maps.InfoWindow({
          content: secretMessage
        });

        marker.addListener('click', function() {
          infowindow.open(marker.get('map'), marker);
        });
      }
       
  
        // 基于准备好的dom，初始化echarts实例
       
   
  function showEarth(){  
      
      
       var myChart = echarts.init(document.getElementById('earth'));
   
// option = {
  $.getJSON('http://127.0.0.1:51379/population.json', function (data) {

    data = data.filter(function (dataItem) {
        return dataItem[2] > 0;
    }).map(function (dataItem) {
        return [dataItem[0], dataItem[1], Math.sqrt(dataItem[2])];
    });

    myChart.setOption({
        visualMap: {
            show: false,
            min: 0,
            max: 60
//            inRange: {
//                symbolSize: [1.0, 100.0]
//            }
        },
        globe: {

            environment: 'http://127.0.0.1:51379/starfield.jpg',
            baseTexture: 'http://127.0.0.1:51379/earth.jpg',
            heightTexture: 'http://127.0.0.1:51379/bathymetry_bw_composite_4k.jpg',

            displacementScale: 0.1,
            displacementQuality: 'high',

            globeOuterRadius: 108,

          //  baseColor: '#000',

            shading: 'realistic',
            realisticMaterial: {
                roughness: 0.2,
                metalness: 0
            },

            postEffect: {
                enable: true,
                bloom : 300,
                intensity: 1
//                depthOfField: {
//                    focalRange: 20,
//                    enable: true,
//                    focalDistance: 160
//                }
            },
            temporalSuperSampling: {
                enable: true
            },
            light: {
                ambient: {
                    intensity: 0
                },
                main: {
                    intensity: 0.1,
                    shadow: false
                },
                ambientCubemap: {
                    texture: 'http://127.0.0.1:51379/lake.hdr',
                    exposure: 1,
                    diffuseIntensity: 0.5,
                    specularIntensity: 2
                }
            },
            viewControl: {
                autoRotate: true,
                autoRotateSpeed : 20,
                beta: 180,
                alpha: 20,
                distance: 160
            }
        },
        series: {
            type: 'scatter3D',
            coordinateSystem: 'globe',
            blendMode: 'lighter',
            symbol : 'pin',
            symbolSize: 50,
            itemStyle: {
                color: 'red',
                opacity: 10
             //   borderColor : '#fff'
            },
            data: data
        }
    });
});
  }
    </script>
     <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDCipfUgnQqVkvveZlJRDCGKfMCfOb81H4&callback=initMap"></script>
 



    </body>
</html>
